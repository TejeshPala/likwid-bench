---
Name: sum_avx512
Description: Double-precision sum of a vector, optimized for AVX-512
RequireWorkGroup: true
FeatureFlag:
- avx512
Parameters:
  N:
    description: 'Size of array that should be loaded, Possible Values: kB, MB, GB'
    options:
    - bytes
    - required
Streams:
  STR0:
    datatype: double
    dimension: 1
    dimsizes:
    - N
Variables:
  BYTES_PER_ELEM: 8
  FLOPS_PER_ELEM: 1
  LOADS_PER_ELEM: 1
  BYTES_PER_ITER: 512
  FLOPS_PER_ITER: 64
  LOADS_PER_ITER: 64
  INST_PER_ITER: 8
  UPOS_PER_ITER: 16
  UNROLL_FACTOR: 64
Metrics:
  Flops [MFLOPS/s]: FLOPS_PER_ITER * ITER / TIME
  Load bandwidth [MBytes/s]: LOADS_PER_ITER * BYTES_PER_ELEM * ITER / TIME
  Total bandwidth [MBytes/s]: BYTES_PER_ITER * ITER / TIME
  Total uops: UPOS_PER_ITER * ITER
  Total instructions: INST_PER_ITER * ITER
Theads:
  offsets: Thread_ID * N / NUM_THREADS
  sizes: N / NUM_THREADS
Language: asm
#---
LOOP(loop, rax=0, <, rdi=N, 64)
vaddpd    zmm1, zmm1, [STR0 + rax * 8]
vaddpd    zmm2, zmm2, [STR0 + rax * 8 + 64]
vaddpd    zmm3, zmm3, [STR0 + rax * 8 + 128]
vaddpd    zmm4, zmm4, [STR0 + rax * 8 + 192]
vaddpd    zmm5, zmm5, [STR0 + rax * 8 + 256]
vaddpd    zmm6, zmm6, [STR0 + rax * 8 + 320]
vaddpd    zmm7, zmm7, [STR0 + rax * 8 + 384]
vaddpd    zmm8, zmm8, [STR0 + rax * 8 + 448]
LOOPEND(loop)
# ptt for comparision [Will be removed soon]
STREAMS 1
TYPE DOUBLE
FLOPS 1
BYTES 8
DESC Double-precision sum of a vector, optimized for AVX-512
LOADS 1
STORES 0
INSTR_CONST 24
INSTR_LOOP 11
UOPS 18
vpxorq zmm1, zmm1, zmm1
vmovapd zmm2, zmm1
vmovapd zmm3, zmm1
vmovapd zmm4, zmm1
vmovapd zmm5, zmm1
vmovapd zmm6, zmm1
vmovapd zmm7, zmm1
vmovapd zmm8, zmm1
LOOP 64
vaddpd    zmm1, zmm1, [STR0 + GPR1 * 8]
vaddpd    zmm2, zmm2, [STR0 + GPR1 * 8 + 64]
vaddpd    zmm3, zmm3, [STR0 + GPR1 * 8 + 128]
vaddpd    zmm4, zmm4, [STR0 + GPR1 * 8 + 192]
vaddpd    zmm5, zmm5, [STR0 + GPR1 * 8 + 256]
vaddpd    zmm6, zmm6, [STR0 + GPR1 * 8 + 320]
vaddpd    zmm7, zmm7, [STR0 + GPR1 * 8 + 384]
vaddpd    zmm8, zmm8, [STR0 + GPR1 * 8 + 448]


