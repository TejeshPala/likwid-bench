---
Name: ddot_sp
Description: Single-precision dot product of two vectors, only scalar operations
RequireWorkGroup: true
FeatureFlag: []
Parameters:
  N:
    description: 'Size of array that should be loaded, Possible Values: kB, MB, GB'
    options:
    - bytes
    - required
Streams:
  STR0:
    datatype: single
    dimension: 1
    dimsizes:
    - N
  STR1:
    datatype: single
    dimension: 1
    dimsizes:
    - N
Variables:
  BYTES_PER_ELEM: 4
  BYTES_PER_ITER: 32
  FLOPS_PER_ITER: 8
  LOADS_PER_ITER: 8
  INST_PER_ITER: 12
  UPOS_PER_ITER: 16
  UNROLL_FACTOR: 4
Metrics:
  Flops [MFLOPS/s]: FLOPS_PER_ITER * ITER / TIME
  Load bandwidth [MBytes/s]: LOADS_PER_ITER * BYTES_PER_ELEM * ITER / TIME
  Total bandwidth [MBytes/s]: BYTES_PER_ITER * ITER / TIME
  Total uops: UPOS_PER_ITER * ITER
  Total instructions: INST_PER_ITER * ITER
Theads:
  offsets: Thread_ID * N / NUM_THREADS
  sizes: N / NUM_THREADS
Language: asm
#---
LOOP(loop, rax=0, <, rdi=N, 4)
movss FPR2, [STR0 + rax * 4]
mulss FPR2, [STR1 + rax * 4]
addss FPR1, FPR2
movss FPR3, [STR0 + rax * 4 + 4]
mulss FPR3, [STR1 + rax * 4 + 4]
addss FPR6, FPR3
movss FPR4, [STR0 + rax * 4 + 8]
mulss FPR4, [STR1 + rax * 4 + 8]
addss FPR7, FPR4
movss FPR5, [STR0 + rax * 4 + 12]
mulss FPR5, [STR1 + rax * 4 + 12]
addss FPR8, FPR5
LOOPEND(loop)
# ptt for comparision [Will be removed soon]
STREAMS 2
TYPE SINGLE
FLOPS 2
BYTES 8
DESC Single-precision dot product of two vectors, only scalar operations
LOADS 2
STORES 0
INSTR_CONST 20
INSTR_LOOP 15
UOPS 18
xorps FPR1, FPR1
xorps FPR6, FPR6
xorps FPR7, FPR7
xorps FPR8, FPR8
LOOP 4
movss FPR2, [STR0 + GPR1 * 4]
mulss FPR2, [STR1 + GPR1 * 4]
addss FPR1, FPR2
movss FPR3, [STR0 + GPR1 * 4 + 4]
mulss FPR3, [STR1 + GPR1 * 4 + 4]
addss FPR6, FPR3
movss FPR4, [STR0 + GPR1 * 4 + 8]
mulss FPR4, [STR1 + GPR1 * 4 + 8]
addss FPR7, FPR4
movss FPR5, [STR0 + GPR1 * 4 + 12]
mulss FPR5, [STR1 + GPR1 * 4 + 12]
addss FPR8, FPR5
