---
Name: store
Description: Double-precision store, only scalar operations
RequireWorkGroup: true
FeatureFlag: []
Parameters:
  N:
    description: 'Size of array that should be loaded, Possible Values: kB, MB, GB'
    options:
    - bytes
    - required
Streams:
  STR0:
    datatype: double
    dimension: 1
    dimsizes:
    - N
Variables:
  BYTES_PER_ELEM: 8
  STORES_PER_ELEM: 1
  BYTES_PER_ITER: 32
  STORES_PER_ITER: 4
  INST_PER_ITER: 4
  UPOS_PER_ITER: 8
  UNROLL_FACTOR: 4
Metrics:
  Store bandwidth [MBytes/s]: STORES_PER_ITER * BYTES_PER_ELEM * ITER / TIME
  Total bandwidth [MBytes/s]: BYTES_PER_ITER * ITER / TIME
  Total uops: UPOS_PER_ITER * ITER
  Total instructions: INST_PER_ITER * ITER
Theads:
  offsets: Thread_ID * N / NUM_THREADS
  sizes: N / NUM_THREADS
Language: asm
#---
LOOP(loop, rax=0, <, rdi=N, 4)
movsd    [STR0 + rax * 8]     , FPR1
movsd    [STR0 + rax * 8 + 8] , FPR2
movsd    [STR0 + rax * 8 + 16], FPR3
movsd    [STR0 + rax * 8 + 24], FPR4
LOOPEND(loop)
# ptt for comparision [Will be removed soon]
STREAMS 1
TYPE DOUBLE
FLOPS 0
DESC Double-precision store, only scalar operations
BYTES 8
LOADS 0
STORES 1
INSTR_CONST 20
INSTR_LOOP 7
UOPS 10
movsd FPR1, [rip+SCALAR]
movsd FPR2, [rip+SCALAR]
movsd FPR3, [rip+SCALAR]
movsd FPR4, [rip+SCALAR]
LOOP 4
movsd    [STR0 + GPR1 * 8]     , FPR1
movsd    [STR0 + GPR1 * 8 + 8] , FPR2
movsd    [STR0 + GPR1 * 8 + 16], FPR3
movsd    [STR0 + GPR1 * 8 + 24], FPR4

