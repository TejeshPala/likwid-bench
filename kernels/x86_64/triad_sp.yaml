---
- Name: triad_sp
- Description: Single-precision triad A(i) = B(i) * C(i) + D(i), only scalar operations
- RequireWorkGroup: true
- FeatureFlag: []
- Parameters:
  - N:
      description: 'Size of array that should be loaded, Possible Values: kB, MB,
        GB'
      options:
      - bytes
      - required
- Streams:
  - STR0:
      datatype: single
      dimension: 1
      dimsizes:
      - N
  - STR1:
      datatype: single
      dimension: 1
      dimsizes:
      - N
  - STR2:
      datatype: single
      dimension: 1
      dimsizes:
      - N
  - STR3:
      datatype: single
      dimension: 1
      dimsizes:
      - N
- Variables:
    BYTES_PER_ELEM: 4
    BYTES_PER_ITER: 128
    FLOPS_PER_ITER: 16
    LOADS_PER_ITER: 24
    STORES_PER_ITER: 8
    INST_PER_ITER: 32
    UPOS_PER_ITER: 56
    UNROLL_FACTOR: 8
- Metrics:
    Flops [MFLOPS/s]: FLOPS_PER_ITER * ITER / TIME
    Load bandwidth [MBytes/s]: LOADS_PER_ITER * BYTES_PER_ELEM * ITER / TIME
    Store bandwidth [MBytes/s]: STORES_PER_ITER * BYTES_PER_ELEM * ITER / TIME
    Total bandwidth [MBytes/s]: BYTES_PER_ITER * ITER / TIME
    Total uops: UPOS_PER_ITER * ITER
    Total instructions: INST_PER_ITER * ITER
- Theads:
    offsets: Thread_ID * N / NUM_THREADS
    sizes: N / NUM_THREADS
- Language: asm
...
LOOP(loop, rax=0, <, rdi=N, 8)
movss    FPR1, [STR1 + rax*4]
movss    FPR2, [STR1 + rax*4 + 4]
movss    FPR3, [STR1 + rax*4 + 8]
movss    FPR4, [STR1 + rax*4 + 12]
mulss    FPR1, [STR2 + rax*4]
addss    FPR1, [STR3 + rax*4]
movss    FPR5, [STR1 + rax*4 + 16]
mulss    FPR2, [STR2 + rax*4 + 4]
addss    FPR2, [STR3 + rax*4 + 4]
movss    FPR6, [STR1 + rax*4 + 20]
mulss    FPR3, [STR2 + rax*4 + 8]
addss    FPR3, [STR3 + rax*4 + 8]
movss    FPR7, [STR1 + rax*4 + 24]
mulss    FPR4, [STR2 + rax*4 + 12]
addss    FPR4, [STR3 + rax*4 + 12]
movss    FPR8, [STR1 + rax*4 + 28]
mulss    FPR5, [STR2 + rax*4 + 16]
addss    FPR5, [STR3 + rax*4 + 16]
mulss    FPR6, [STR2 + rax*4 + 20]
addss    FPR6, [STR3 + rax*4 + 20]
mulss    FPR7, [STR2 + rax*4 + 24]
addss    FPR7, [STR3 + rax*4 + 24]
mulss    FPR8, [STR2 + rax*4 + 28]
addss    FPR8, [STR3 + rax*4 + 28]
movss    [STR0 + rax*4], FPR1
movss    [STR0 + rax*4 + 4], FPR2
movss    [STR0 + rax*4 + 8], FPR3
movss    [STR0 + rax*4 + 12], FPR4
movss    [STR0 + rax*4 + 16], FPR5
movss    [STR0 + rax*4 + 20], FPR6
movss    [STR0 + rax*4 + 24], FPR7
movss    [STR0 + rax*4 + 28], FPR8
LOOPEND(loop)
# ptt for comparision [Will be removed soon]
STREAMS 4
TYPE SINGLE
FLOPS 2
BYTES 16
DESC Single-precision triad A(i) = B(i) * C(i) + D(i), only scalar operations
LOADS 3
STORES 1
INSTR_CONST 16
INSTR_LOOP 35
UOPS 58
LOOP 8
movss    FPR1, [STR1 + GPR1*4]
movss    FPR2, [STR1 + GPR1*4 + 4]
movss    FPR3, [STR1 + GPR1*4 + 8]
movss    FPR4, [STR1 + GPR1*4 + 12]
mulss    FPR1, [STR2 + GPR1*4]
addss    FPR1, [STR3 + GPR1*4]
movss    FPR5, [STR1 + GPR1*4 + 16]
mulss    FPR2, [STR2 + GPR1*4 + 4]
addss    FPR2, [STR3 + GPR1*4 + 4]
movss    FPR6, [STR1 + GPR1*4 + 20]
mulss    FPR3, [STR2 + GPR1*4 + 8]
addss    FPR3, [STR3 + GPR1*4 + 8]
movss    FPR7, [STR1 + GPR1*4 + 24]
mulss    FPR4, [STR2 + GPR1*4 + 12]
addss    FPR4, [STR3 + GPR1*4 + 12]
movss    FPR8, [STR1 + GPR1*4 + 28]
mulss    FPR5, [STR2 + GPR1*4 + 16]
addss    FPR5, [STR3 + GPR1*4 + 16]
mulss    FPR6, [STR2 + GPR1*4 + 20]
addss    FPR6, [STR3 + GPR1*4 + 20]
mulss    FPR7, [STR2 + GPR1*4 + 24]
addss    FPR7, [STR3 + GPR1*4 + 24]
mulss    FPR8, [STR2 + GPR1*4 + 28]
addss    FPR8, [STR3 + GPR1*4 + 28]
movss    [STR0 + GPR1*4], FPR1
movss    [STR0 + GPR1*4 + 4], FPR2
movss    [STR0 + GPR1*4 + 8], FPR3
movss    [STR0 + GPR1*4 + 12], FPR4
movss    [STR0 + GPR1*4 + 16], FPR5
movss    [STR0 + GPR1*4 + 20], FPR6
movss    [STR0 + GPR1*4 + 24], FPR7
movss    [STR0 + GPR1*4 + 28], FPR8
