---
- Name: stream_nt_sse_fma
- Description: Double-precision stream triad A[i] = B[i] + d * C[i], optimized for SSE and non-temporal stores
- RequireWorkgroup: true
- FeatureFlag:
    - fma
    - sse
- Parameters:
  - N:
      description: Size of array that should be copied, Possible Values -  B, KB, MB, GB, TB, KiB, MiB, GiB, TiB
      options:
        - bytes
        - required
- Streams:
  - STR0:
      dimensions: 1
      datatype: double
      initialization: rand
      dimsizes:
        - N
      options:
        - perthread
      offsets:
        - THREAD_ID*(N/NUM_THREADS)
      sizes:
        - N/NUM_THREADS
  - STR1:
      dimensions: 1
      datatype: double
      dimsizes:
        - N
      options:
        - perthread
      offsets:
        - THREAD_ID*(N/NUM_THREADS)
      sizes:
        - N/NUM_THREADS
  - STR2:
      dimensions: 1
      datatype: double
      dimsizes:
        - N
      options:
        - perthread
      offsets:
        - THREAD_ID*(N/NUM_THREADS)
      sizes:
        - N/NUM_THREADS
- Variables:
  LOADS_PER_ELEM: 2
  STORES_PER_ELEM: 1
  MEM_OPS_PER_ELEM: 3
  LOADS_PER_ITER: 16
  STORES_PER_ITER: 8
  ELEMS_PER_ITER: 8
  BYTES_PER_ITER: 192
  INST_PER_ITER: 12
  INST_LOOP: 15
  UOPS_PER_ITER: 16
  UOPS_LOOP: 18
  FLOPS_PER_ITER: 2
- Metrics:
  Read bandwidth [MByte/s]: (1.0E-06*ITER*(N/NUM_THREADS)*LOADS_PER_ELEM)/time
  Store bandwidth [MByte/s]: (1.0E-06*ITER*(N/NUM_THREADS)*STORES_PER_ELEM)/time
  Total bandwidth [MByte/s]: (1.0E-06*ITER*(N/NUM_THREADS)*(MEM_OPS_PER_ELEM))/time
  Total instructions: ITER*(((N/NUM_THREADS)/SIZEOF_DOUBLE)/ELEMS_PER_ITER)*INST_LOOP
  Total uops: ITER*(((N/NUM_THREADS)/SIZEOF_DOUBLE)/ELEMS_PER_ITER)*UOPS_LOOP
  Total flops [MFlops/s]: (1.0E-06*ITER*((N/SIZEOF_DOUBLE)/NUM_THREADS)*(FLOPS_PER_ITER))/time
- Language: asm
...
movaps      xmm4, [rip + SCALAR]
LOOP(loop, rax=0, <, rdi=N, 8)
movaps      xmm0, [STR1 + rax * 8]
movaps      xmm1, [STR1 + rax * 8 + 16]
movaps      xmm2, [STR1 + rax * 8 + 32]
movaps      xmm3, [STR1 + rax * 8 + 48]
vfmadd213sd xmm0, xmm4, [STR2 + rax * 8]
vfmadd213sd xmm1, xmm4, [STR2 + rax * 8 + 16]
vfmadd213sd xmm2, xmm4, [STR2 + rax * 8 + 32]
vfmadd213sd xmm3, xmm4, [STR2 + rax * 8 + 48]
movntps     [STR0 + rax * 8]        , xmm0
movntps     [STR0 + rax * 8 + 16]   , xmm1
movntps     [STR0 + rax * 8 + 32]   , xmm2
movntps     [STR0 + rax * 8 + 48]   , xmm3
LOOPEND(loop)
