---
- Name: divide
- Description: Double-precision vector update, only scalar operations
- RequireWorkGroup: true
- FeatureFlag: []
- Parameters:
  - N:
      description: 'Size of array that should be loaded, Possible Values: kB, MB,
        GB'
      options:
      - bytes
      - required
- Streams:
  - STR0:
      datatype: double
      dimension: 1
      dimsizes:
      - N
- Variables:
    BYTES_PER_ELEM: 8
    BYTES_PER_ITER: 64
    FLOPS_PER_ITER: 4
    LOADS_PER_ITER: 4
    STORES_PER_ITER: 4
    INST_PER_ITER: 12
    UPOS_PER_ITER: 12
    UNROLL_FACTOR: 4
- Metrics:
    Flops [MFLOPS/s]: FLOPS_PER_ITER * ITER / TIME
    Load bandwidth [MBytes/s]: LOADS_PER_ITER * BYTES_PER_ELEM * ITER / TIME
    Store bandwidth [MBytes/s]: STORES_PER_ITER * BYTES_PER_ELEM * ITER / TIME
    Total bandwidth [MBytes/s]: BYTES_PER_ITER * ITER / TIME
    Total uops: UPOS_PER_ITER * ITER
    Total instructions: INST_PER_ITER * ITER
- Theads:
    offsets: Thread_ID * N / NUM_THREADS
    sizes: N / NUM_THREADS
- Language: asm
...
LOOP(loop, rax=0, <, rdi=N, 4)
movsd    FPR1, [STR0 + rax * 8]
divsd    FPR1, FPR1
movsd    [STR0 + rax * 8]     , FPR1
movsd    FPR2, [STR0 + rax * 8 + 8]
movsd    FPR3, [STR0 + rax * 8 + 16]
movsd    FPR4, [STR0 + rax * 8 + 24]
divsd    FPR2, FPR2
divsd    FPR3, FPR3
divsd    FPR4, FPR4
movsd    [STR0 + rax * 8 + 8], FPR2
movsd    [STR0 + rax * 8 + 16], FPR3
movsd    [STR0 + rax * 8 + 24], FPR4
LOOPEND(loop)
# ptt for comparision [Will be removed soon]
STREAMS 1
TYPE DOUBLE
FLOPS 1
BYTES 16
DESC Double-precision vector update, only scalar operations
LOADS 1
STORES 1
INSTR_CONST 16
INSTR_LOOP 11
UOPS 14
LOOP 4
movsd    FPR1, [STR0 + GPR1 * 8]
divsd    FPR1, FPR1
movsd    [STR0 + GPR1 * 8]     , FPR1
movsd    FPR2, [STR0 + GPR1 * 8 + 8]
movsd    FPR3, [STR0 + GPR1 * 8 + 16]
movsd    FPR4, [STR0 + GPR1 * 8 + 24]
divsd    FPR2, FPR2
divsd    FPR3, FPR3
divsd    FPR4, FPR4
movsd    [STR0 + GPR1 * 8 + 8], FPR2
movsd    [STR0 + GPR1 * 8 + 16], FPR3
movsd    [STR0 + GPR1 * 8 + 24], FPR4


